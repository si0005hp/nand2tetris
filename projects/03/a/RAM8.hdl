// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=true, sel=address, a=r0flg, b=r1flg, c=r2flg, d=r3flg, e=r4flg, f=r5flg, g=r6flg, h=r7flg);

    Mux16(a=r0o, b=in, sel=r0flg, out=r0mo); Register(in=r0mo, load=load, out=r0o);
    Mux16(a=r1o, b=in, sel=r1flg, out=r1mo); Register(in=r1mo, load=load, out=r1o);
    Mux16(a=r2o, b=in, sel=r2flg, out=r2mo); Register(in=r2mo, load=load, out=r2o);
    Mux16(a=r3o, b=in, sel=r3flg, out=r3mo); Register(in=r3mo, load=load, out=r3o);
    Mux16(a=r4o, b=in, sel=r4flg, out=r4mo); Register(in=r4mo, load=load, out=r4o);
    Mux16(a=r5o, b=in, sel=r5flg, out=r5mo); Register(in=r5mo, load=load, out=r5o);
    Mux16(a=r6o, b=in, sel=r6flg, out=r6mo); Register(in=r6mo, load=load, out=r6o);
    Mux16(a=r7o, b=in, sel=r7flg, out=r7mo); Register(in=r7mo, load=load, out=r7o);

    Mux8Way16(sel=address, a=r0o, b=r1o, c=r2o, d=r3o, e=r4o, f=r5o, g=r6o, h=r7o, out=out);
}
